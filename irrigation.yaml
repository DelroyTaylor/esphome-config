# Forked from: https://github.com/bruxy70/Irrigation-with-display
# MIT License: https://github.com/brianhanifin/Irrigation-with-display/blob/master/LICENSE
# 
# Credit: @bruxy70 thank you for the significant head start!
# Personal project goals: https://github.com/brianhanifin/Home-Assistant-Config/issues/37
#
substitutions:
  project: Irrigation Controller
  id: irrigation
  <<: !include common/substitutions/sonoff4chpror2_gpio.yaml

<<: !include common/esphome/esp8266.yaml
<<: !include common/wifi.yaml
<<: !include common/ota.yaml
<<: !include common/logger.yaml

# Enable Home Assistant API
api:
  services:
    - service: set_time_1
      variables:
        time: int
      then:
        globals.set:
          id: time1
          value: !lambda "return time;"

    - service: set_time_2
      variables:
        time: int
      then:
        globals.set:
          id: time2
          value: !lambda "return time;"
          
    - service: set_time_3
      variables:
        time: int
      then:
        globals.set:
          id: time3
          value: !lambda "return time;"
          
    - service: set_time_4
      variables:
        time: int
      then:
        globals.set:
          id: time4
          value: !lambda "return time;"

globals:
  # Irrigation time elapsed
  - id: time1
    type: int
    restore_value: no
    initial_value: '1800'
  - id: time2
    type: int
    restore_value: no
    initial_value: '1800'
  - id: time3
    type: int
    restore_value: no
    initial_value: '1800'
  - id: time4
    type: int
    restore_value: no
    initial_value: '1800'

  # Irrigation time remaining
  - id: remaining_time1
    type: int
    restore_value: no
    initial_value: '1800'
  - id: remaining_time2
    type: int
    restore_value: no
    initial_value: '1800'
  - id: remaining_time3
    type: int
    restore_value: no
    initial_value: '1800'
  - id: remaining_time4
    type: int
    restore_value: no
    initial_value: '1800'

binary_sensor:
  - !include common/binary_sensors/status.yaml

  # Buttons along the left side of the unit (R1, R2, R3, R4).
  - platform: gpio
    id: key1
    pin:
      number: $button1_gpio
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_click:
      min_length: 50ms
      max_length: 350ms
      then:
        - globals.set:
            id: time1
            value: "900"
        - switch.toggle: relay1

  - platform: gpio
    id: key2
    pin:
      number: $button2_gpio
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_click:
      min_length: 50ms
      max_length: 350ms
      then:
        - globals.set:
            id: time2
            value: "900"
        - switch.toggle: relay2
        
  - platform: gpio
    id: key3
    pin:
      number: $button3_gpio
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_click:
      min_length: 100ms
      max_length: 500ms
      then:
        - globals.set:
            id: time3
            value: "900"
        - switch.toggle: relay3
        
  - platform: gpio
    id: key4
    pin:
      number: $button4_gpio
      mode: INPUT_PULLUP
      inverted: True
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_click:
      min_length: 100ms
      max_length: 500ms
      then:
        - globals.set:
            id: time4
            value: "600"
        - switch.toggle: relay4

switch:
  - !include common/switches/restart.yaml

  # Relays which trigger solenoids
  - platform: gpio
    id: relay1
    name: $project Zone 1
    pin: $relay1_gpio
    on_turn_on:
      then:
      - globals.set:
          id: remaining_time1
          value: !lambda "return id(time1);"
          
  - platform: gpio
    id: relay2
    name: $project Zone 2
    pin: $relay2_gpio
    on_turn_on:
      then:
      - globals.set:
          id: remaining_time2
          value: !lambda "return id(time2);"
          
  - platform: gpio
    id: relay3
    name: $project Zone 3
    pin: $relay3_gpio
    on_turn_on:
      - globals.set:
          id: remaining_time3
          value: !lambda "return id(time3);"
          
  - platform: gpio
    id: relay4
    name: $project Zone 4
    pin: $relay4_gpio
    on_turn_on:
      - globals.set:
          id: remaining_time4
          value: !lambda "return id(time4);"

interval:
  - interval: 5s
    then:
      - lambda: |-
          if(id(relay1).state) {
            id(remaining_time1)=id(remaining_time1)-5;
            if(id(remaining_time1)<=0){
              id(relay1).turn_off();
            }
          }
          
          if(id(relay2).state) {
            id(remaining_time2)=id(remaining_time2)-5;
            if(id(remaining_time2)<=0){
              id(relay2).turn_off();
            }
          }
          
          if(id(relay3).state) {
            id(remaining_time3)=id(remaining_time3)-5;
            if(id(remaining_time3)<=0){
              id(relay3).turn_off();
            }
          }
          
          if(id(relay4).state) {
            id(remaining_time4)=id(remaining_time4)-5;
            if(id(remaining_time4)<=0){
              id(relay4).turn_off();
            }
          }

output:
  - platform: esp8266_pwm
    id: led_wifi
    pin: $led_wifi_gpio
    inverted: True

light:
  - platform: monochromatic
    internal: True
    output: led_wifi
    id: led

sensor:
  - !include common/sensors/uptime.yaml
  - !include common/sensors/wifi_signal.yaml
